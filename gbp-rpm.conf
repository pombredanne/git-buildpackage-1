# Configuration file for git-buildpackage rpm tools

[DEFAULT]
# the default build command:
#builder = rpmbuild -ba
# the default clean command:
#cleaner = git clean -d
# the default branch for upstream sources:
#upstream-branch = upstream
# the default branch for the packaging files:
#packaging-branch = master
# the default tag formats used:
#upstream-tag = upstream/%(version)s
#packaging-tag = packaging/%(version)s
# use pristine-tar:
#pristine-tar = True
# don't check if packaging-branch == current branch:
#ignore-branch = True
# Use color when on a terminal, alternatives: on/true, off/false or auto
#color = auto
# directory containing rpm packaging files:
#packaging-dir=rpm

# Options only affecting git-buildpackage-rpm
[git-buildpackage-rpm]
# Look for a tag matching the upstream version when creating a tarball
#upstream-tree = tag
# uncomment this to automatically GPG sign tags:
#sign-tags = True
# keyid to GPG sign tags with:
#keyid = 0xdeadbeef
# push to a remote repository after a successful tag:
#posttag = git-push git.example.com
# call run rpmlint after a successful build (for all rpm's found under build dir):
#postbuild = find $GBP_BUILD_DIR -name '*rpm' -exec rpmlint -i {} \;
# run a script before build:
#prebuild = GIT_DIR=$GBP_GIT_DIR my_prebuild.sh
# build outside our git source tree:
#export-dir = ../build-area/
#tarball-dir = ../tarballs/
#ignore-new = True
#export = HEAD
# use best compression
#compression-level = best
# Don't send notifications, alternatives: on/true, off/false or auto
#notify = off
# Transparently handle submodules
#submodules = True
# rpmbuild related options:
#rpmbuild-builddir=BUILD_DIR
#rpmbuild-rpmdir=RPM_DIR
#rpmbuild-sourcedir=SOURCE_DIR
#rpmbuild-specdir=SPEC_DIR
#rpmbuild-srpmdir=SRPM_DIR
#rpmbuild-buildrootdir=BUILDROOT_DIR
# Generate patches against upstream
#auto-patch-gen = True
#patch-numbers = True

# Options only affecting git-import-orig-rpm
[git-import-orig-rpm]
# set a different upstream branch to import to:
#upstream-branch = newupstream
# set a different branch to merge to:
#packaging-branch = pkgclean
# don't merge to packaging branch by default:
#merge = False
# import filter:
#filter = .svn
# filter out files from tarball passed to pristine tar:
#filter-pristine-tar = True
# name used in storing tarballs in pristine-tar branch
#pristine-tarball-base = %(name)s_%(version)s
# run hook after the import:
#postimport = my_postimport.sh
# commit message:
#import-msg = New upstream version %(version)s

# Options only affecting git-import-srpm
[git-import-srpm]
# set a different upstream branch:
#upstream-branch = svn-upstream
# import filter:
#filter = [ 'CVS', '.cvsignore' ]

# Options only affecting gbp-pq-rpm
[gbp-pq-rpm]
#patch-numbers = False

# Options only affecting gbp-clone
[gbp-clone]
#pristine-tar = True

# Options only affecting gbp-pull
[gbp-pull]
#pristine-tar = True

[gbp-create-remote-repo]
# disable remote branch tracking
#track = False
